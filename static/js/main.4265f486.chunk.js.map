{"version":3,"sources":["components/Header/WebGL.js","components/Header/vilperi.glb","components/Header/ThreeModel.tsx","components/Header/HeaderImage.tsx","components/Header/HeaderText.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/MainContent/Article.tsx","utils/articleContent.ts","components/MainContent/MainContent.tsx","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WEBGL","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","WebGL2RenderingContext","this","getErrorMessage","version","contexts","message","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","replace","innerHTML","sizes","ThreeModel","mountRef","useRef","useEffect","scene","createScene","camera","createCamera","renderer","createRenderer","light1","createLight","GLTFLoader","load","vilperi","gltf","model","add","undefined","console","error","tick","render","requestAnimationFrame","current","appendChild","domElement","ref","THREE","posX","posY","posZ","rotX","rotY","rotZ","position","set","rotation","alpha","antialias","setSize","setPixelRatio","Math","min","devicePixelRatio","pointLight","intensity","HeaderImage","className","isWebGLAvailable","alt","src","HeaderText","Header","Navigation","articleNavHeaders","map","header","i","to","text","Article","imgsrc","articleLinks","link","pageRefs","articles","path","MainContent","article","exact","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"wXAEaA,EAAb,qGACI,WACI,IACI,IAAMC,EAASC,SAASC,cAAc,UACtC,SACIC,OAAOC,wBACNJ,EAAOK,WAAW,WACfL,EAAOK,WAAW,uBAE5B,MAAOC,GACL,OAAO,KAVnB,+BAcI,WACI,IACI,IAAMN,EAASC,SAASC,cAAc,UACtC,SACIC,OAAOI,yBAA0BP,EAAOK,WAAW,WAEzD,MAAOC,GACL,OAAO,KArBnB,kCAyBI,WACI,OAAOE,KAAKC,gBAAgB,KA1BpC,mCA6BI,WACI,OAAOD,KAAKC,gBAAgB,KA9BpC,6BAiCI,SAAuBC,GACnB,IAKMC,EAAW,CACb,EAAGR,OAAOC,sBACV,EAAGD,OAAOI,wBAGVK,EACA,oIAEEC,EAAUZ,SAASC,cAAc,OAsBvC,OArBAW,EAAQC,GAAK,eACbD,EAAQE,MAAMC,WAAa,YAC3BH,EAAQE,MAAME,SAAW,OACzBJ,EAAQE,MAAMG,WAAa,SAC3BL,EAAQE,MAAMI,UAAY,SAC1BN,EAAQE,MAAMK,WAAa,OAC3BP,EAAQE,MAAMM,MAAQ,OACtBR,EAAQE,MAAMO,QAAU,QACxBT,EAAQE,MAAMQ,MAAQ,QACtBV,EAAQE,MAAMS,OAAS,aAQvBZ,GALIA,EADAD,EAASD,GACCE,EAAQa,QAAQ,KAAM,iBAEtBb,EAAQa,QAAQ,KAAM,YAGlBA,QAAQ,KA/BZ,CACV,EAAG,QACH,EAAG,WA6B+Bf,IAEtCG,EAAQa,UAAYd,EAEbC,MArEf,K,uBCFe,MAA0B,oC,OCWnCc,EAAiB,IAAjBA,EAA8B,IAUvBC,EAAa,WACtB,IAAMC,EAAWC,iBAAuB7B,SAASC,cAAc,QAiD/D,OA/CA6B,qBAAU,WACN,IAAMC,EAAQC,IACRC,EAASC,EAAa,EAAG,KAAO,MAAQ,KAAO,KAAO,GACtDC,EAAWC,IACXC,EAASC,EAAY,EAAG,EAAG,GAClBA,GAAa,EAAG,EAAG,IAGnB,IAAIC,KACZC,KACHC,GACA,SAAUC,GACN,IAAIC,EAAQD,EAAKX,MACjBA,EAAMa,IAAID,UAIdE,GACA,SAAUxC,GACNyC,QAAQC,MAAM1C,MAGtB0B,EAAMa,IAAIX,GACVF,EAAMa,IAAIP,IAaG,SAAPW,IAGFb,EAASc,OAAOlB,EAAOE,GACvB/B,OAAOgD,sBAAsBF,GAEjCA,GAEApB,EAASuB,QAAQC,YAAYjB,EAASkB,cACvC,CAACzB,IAEG,qBAAK0B,IAAK1B,KAGfI,EAAc,WAEhB,OADc,IAAIuB,KAIhBrB,EAAe,SACjBsB,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAM5B,EAAS,IAAIsB,IACf,GACA7B,EAAcA,EACd,GACA,KAIJ,OAFAO,EAAO6B,SAASC,IAAIP,EAAMC,EAAMC,GAChCzB,EAAO+B,SAASD,IAAIJ,EAAMC,EAAMC,GACzB5B,GAGLG,EAAiB,WACnB,IAAMD,EAAW,IAAIoB,KAAoB,CAAEU,OAAO,EAAMC,WAAW,IAGnE,OAFA/B,EAASgC,QAAQzC,EAAaA,GAC9BS,EAASiC,cAAcC,KAAKC,IAAIpE,OAAOqE,iBAAkB,IAClDpC,GAGLG,EAAc,SAACkB,EAAcC,EAAcC,GAC7C,IAAMc,EAAa,IAAIjB,IAAiB,SAAU,KAGlD,OAFAiB,EAAWV,SAASC,IAAIP,EAAMC,EAAMC,GACpCc,EAAWC,UAAY,IAChBD,GCxGEE,EAAc,WACvB,OACI,qBAAKC,UAAU,yBAAyB,cAAY,cAApD,SACK7E,EAAM8E,mBACH,cAAC,EAAD,IAEA,qBACID,UAAU,eACVE,IAAI,oBACJC,IAAI,sKCZXC,EAAa,WACtB,OACI,sBAAKJ,UAAU,wBAAwB,cAAY,aAAnD,UACI,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mDAGA,qBAAKA,UAAU,iBAAf,SACI,+BACI,wCACA,8CACA,4CACA,0DCTPK,EAAS,WAClB,OACI,yBAAQL,UAAU,SAAS,cAAY,SAAvC,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,gBCHCM,EAAa,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,kBACzB,OACI,qBAAKP,UAAU,iBAAiB,cAAY,iBAA5C,SACKO,GACG,6BACKA,EAAkBC,KAAI,SAACC,EAAQC,GAAT,OACnB,6BACI,cAAC,IAAD,CAAMC,GAAIF,EAAO9B,IAAK,cAAa8B,EAAOG,KAA1C,SACKH,EAAOG,QAFPF,WCTpBG,G,MAAU,SAAC,GAKH,IAJjBJ,EAIgB,EAJhBA,OACAK,EAGgB,EAHhBA,OACAF,EAEgB,EAFhBA,KACAG,EACgB,EADhBA,aAEA,OACI,yBAASf,UAAU,WAAW,cAAY,UAA1C,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCS,IAChC,qBACIT,UAAU,gBACVG,IAAKW,EACLZ,IAAI,oBAER,sBAAKF,UAAU,eAAf,UACI,4BAAIY,IACHG,GACG,6BACKA,EAAaP,KAAI,SAACQ,EAAMN,GAAP,OACd,6BAAaM,GAAJN,kB,OCvBnCO,EACS,IADTA,EAEI,QAFJA,EAGI,QAHJA,EAII,QAGGV,EAAoB,CAC7B,CAAEK,KAAM,aAAcjC,IAAK,IAAMsC,GACjC,CAAEL,KAAM,yBAA0BjC,IAAK,IAAMsC,GAC7C,CAAEL,KAAM,mBAAoBjC,IAAK,IAAMsC,GACvC,CAAEL,KAAM,eAAgBjC,IAAK,IAAMsC,IAG1BC,EAAW,CACpB,CACIC,KAAMF,EACNR,OAAQ,aACRK,OAAQ,2FACRF,KAAM,kKACNG,aAAc,CAAC,oDAEnB,CACII,KAAMF,EACNR,OAAQ,yBACRK,OAAQ,mHACRF,KAAK,gYAOLG,aAAc,CAAC,eAAgB,iBAEnC,CACII,KAAMF,EACNR,OAAQ,0BACRK,OAAQ,mHACRF,KAAK,gYAOLG,aAAc,CAAC,eAAgB,iBAEnC,CACII,KAAMF,EACNR,OAAQ,0BACRK,OAAQ,mHACRF,KAAK,gYAOLG,aAAc,CAAC,eAAgB,kBCnD1BK,EAAc,WACvB,OACI,qBAAK,cAAY,cAAjB,SACI,cAAC,IAAD,UACKF,EAASV,KAAI,SAACa,GAAD,OACV,cAAC,IAAD,CAA0BC,OAAK,EAACH,KAAME,EAAQF,KAA9C,SACI,cAAC,EAAD,CACIV,OAAQY,EAAQZ,OAChBK,OAAQO,EAAQP,OAChBF,KAAMS,EAAQT,KACdG,aAAcM,EAAQN,gBALlBM,EAAQF,cCX3BI,G,MAAS,WAClB,OACI,wBAAQvB,UAAU,SAAS,cAAY,SAAvC,SACI,wDCQCwB,EAAM,WACf,OACI,cAAC,IAAD,UACI,sBAAKxB,UAAU,MAAM,cAAY,MAAjC,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAYO,kBAAmBA,IAC/B,cAAC,EAAD,IAEA,cAAC,EAAD,UCPDkB,G,YAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCFdQ,IAAS5D,OACL,cAAC,IAAM6D,WAAP,UACI,cAAC,EAAD,MAEJ9G,SAAS+G,eAAe,SAM5BX,M","file":"static/js/main.4265f486.chunk.js","sourcesContent":["/* https://github.com/mrdoob/three.js/blob/master/examples/jsm/WebGL.js */\r\n\r\nexport class WEBGL {\r\n    static isWebGLAvailable() {\r\n        try {\r\n            const canvas = document.createElement('canvas')\r\n            return !!(\r\n                window.WebGLRenderingContext &&\r\n                (canvas.getContext('webgl') ||\r\n                    canvas.getContext('experimental-webgl'))\r\n            )\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    static isWebGL2Available() {\r\n        try {\r\n            const canvas = document.createElement('canvas')\r\n            return !!(\r\n                window.WebGL2RenderingContext && canvas.getContext('webgl2')\r\n            )\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    static getWebGLErrorMessage() {\r\n        return this.getErrorMessage(1)\r\n    }\r\n\r\n    static getWebGL2ErrorMessage() {\r\n        return this.getErrorMessage(2)\r\n    }\r\n\r\n    static getErrorMessage(version) {\r\n        const names = {\r\n            1: 'WebGL',\r\n            2: 'WebGL 2',\r\n        }\r\n\r\n        const contexts = {\r\n            1: window.WebGLRenderingContext,\r\n            2: window.WebGL2RenderingContext,\r\n        }\r\n\r\n        let message =\r\n            'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>'\r\n\r\n        const element = document.createElement('div')\r\n        element.id = 'webglmessage'\r\n        element.style.fontFamily = 'monospace'\r\n        element.style.fontSize = '13px'\r\n        element.style.fontWeight = 'normal'\r\n        element.style.textAlign = 'center'\r\n        element.style.background = '#fff'\r\n        element.style.color = '#000'\r\n        element.style.padding = '1.5em'\r\n        element.style.width = '400px'\r\n        element.style.margin = '5em auto 0'\r\n\r\n        if (contexts[version]) {\r\n            message = message.replace('$0', 'graphics card')\r\n        } else {\r\n            message = message.replace('$0', 'browser')\r\n        }\r\n\r\n        message = message.replace('$1', names[version])\r\n\r\n        element.innerHTML = message\r\n\r\n        return element\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/vilperi.518a249a.glb\";","import './header.scss'\r\n\r\nimport { useRef, useEffect } from 'react'\r\nimport * as TWEAK from 'tweakpane'\r\nimport * as THREE from 'three'\r\n\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n// @ts-ignore\r\nimport vilperi from './vilperi.glb'\r\n\r\nconst sizes = { width: 200, height: 250 }\r\n\r\ntype tweakPaneTypes = {\r\n    pane: TWEAK.Pane\r\n    light: THREE.PointLight\r\n    camera: THREE.PerspectiveCamera\r\n}\r\n\r\nconst DEBUG = false\r\n\r\nexport const ThreeModel = () => {\r\n    const mountRef = useRef<HTMLDivElement>(document.createElement('div'))\r\n\r\n    useEffect(() => {\r\n        const scene = createScene()\r\n        const camera = createCamera(0, 0.239, 0.261, -0.239, 0.022, 0)\r\n        const renderer = createRenderer()\r\n        const light1 = createLight(1, 6, 8)\r\n        const light2 = createLight(-1, 6, 8)\r\n        //const clock = new THREE.Clock()\r\n\r\n        const loader = new GLTFLoader()\r\n        loader.load(\r\n            vilperi,\r\n            function (gltf) {\r\n                let model = gltf.scene\r\n                scene.add(model)\r\n\r\n                //createGUI( model, gltf.animations );\r\n            },\r\n            undefined,\r\n            function (e) {\r\n                console.error(e)\r\n            }\r\n        )\r\n        scene.add(camera)\r\n        scene.add(light1)\r\n\r\n        /* Debug */\r\n        if (DEBUG) {\r\n            const pane = new TWEAK.Pane()\r\n            addTweakPane({ pane: pane, light: light1, camera: camera })\r\n            const pointLightHelper1 = new THREE.PointLightHelper(light1, 0.1)\r\n            scene.add(pointLightHelper1)\r\n            const pointLightHelper2 = new THREE.PointLightHelper(light2, 0.1)\r\n            scene.add(pointLightHelper2)\r\n        }\r\n\r\n        /* Render */\r\n        const tick = () => {\r\n            //const elapsedTime = clock.getElapsedTime()\r\n\r\n            renderer.render(scene, camera)\r\n            window.requestAnimationFrame(tick)\r\n        }\r\n        tick()\r\n\r\n        mountRef.current.appendChild(renderer.domElement)\r\n    }, [mountRef])\r\n\r\n    return <div ref={mountRef}></div>\r\n}\r\n\r\nconst createScene = () => {\r\n    const scene = new THREE.Scene()\r\n    return scene\r\n}\r\n\r\nconst createCamera = (\r\n    posX: number,\r\n    posY: number,\r\n    posZ: number,\r\n    rotX: number,\r\n    rotY: number,\r\n    rotZ: number\r\n) => {\r\n    const camera = new THREE.PerspectiveCamera(\r\n        75,\r\n        sizes.width / sizes.height,\r\n        0.1,\r\n        100\r\n    )\r\n    camera.position.set(posX, posY, posZ)\r\n    camera.rotation.set(rotX, rotY, rotZ)\r\n    return camera\r\n}\r\n\r\nconst createRenderer = () => {\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true })\r\n    renderer.setSize(sizes.width, sizes.height)\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\r\n    return renderer\r\n}\r\n\r\nconst createLight = (posX: number, posY: number, posZ: number) => {\r\n    const pointLight = new THREE.PointLight(0xffffff, 1.5)\r\n    pointLight.position.set(posX, posY, posZ)\r\n    pointLight.intensity = 1.4\r\n    return pointLight\r\n}\r\n\r\nconst addTweakPane = ({ pane, light, camera }: tweakPaneTypes) => {\r\n    /* Lighting */\r\n    const lightingFolder = pane.addFolder({ title: 'Lighting' })\r\n    lightingFolder.addInput(light.position, 'x', {\r\n        min: -4,\r\n        max: 4,\r\n        step: 0.01,\r\n    })\r\n    lightingFolder.addInput(light.position, 'y', {\r\n        min: 0,\r\n        max: 10,\r\n        step: 0.01,\r\n    })\r\n    lightingFolder.addInput(light.position, 'z', {\r\n        min: -0.5,\r\n        max: 10,\r\n        step: 0.01,\r\n    })\r\n    lightingFolder.addInput(light, 'intensity', { min: 0, max: 10, step: 0.1 })\r\n\r\n    /* Camera */\r\n    const cameraFolder = pane.addFolder({ title: 'Camera' })\r\n    cameraFolder.addInput(camera.position, 'x', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n    cameraFolder.addInput(camera.position, 'y', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n    cameraFolder.addInput(camera.position, 'z', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n    cameraFolder.addInput(camera.rotation, 'x', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n    cameraFolder.addInput(camera.rotation, 'y', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n    cameraFolder.addInput(camera.rotation, 'z', {\r\n        min: -1,\r\n        max: 1,\r\n        step: 0.001,\r\n    })\r\n\r\n    const btn = pane.addButton({\r\n        title: 'Export Settings to Console',\r\n    })\r\n    btn.on('click', function () {\r\n        const preset = pane.exportPreset()\r\n        console.log(preset)\r\n    })\r\n}\r\n","import './header.scss'\r\n\r\nimport { WEBGL } from './WebGL.js'\r\nimport { ThreeModel } from './ThreeModel'\r\n\r\nexport const HeaderImage = () => {\r\n    return (\r\n        <div className=\"header-image-container\" data-testid=\"headerImage\">\r\n            {WEBGL.isWebGLAvailable() ? (\r\n                <ThreeModel />\r\n            ) : (\r\n                <img\r\n                    className=\"header-image\"\r\n                    alt='A \"self\" portrait'\r\n                    src=\"https://images.unsplash.com/photo-1579972383667-4894c883d674?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1587&q=80\"\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import './header.scss'\r\n\r\nexport const HeaderText = () => {\r\n    return (\r\n        <div className=\"header-text-container\" data-testid=\"headerText\">\r\n            <h1 className=\"header-text\">Hello!</h1>\r\n            <h2 className=\"header-text\">\r\n                Welcome to my suuuuuper cool website!\r\n            </h2>\r\n            <div className=\"header-socials\">\r\n                <ul>\r\n                    <li>Github</li>\r\n                    <li>Contact Info</li>\r\n                    <li>Other Info</li>\r\n                    <li>Give me a treat</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './header.scss'\r\n\r\nimport { HeaderImage } from './HeaderImage'\r\nimport { HeaderText } from './HeaderText'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"header\" data-testid=\"header\">\r\n            <HeaderText />\r\n            <HeaderImage />\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './navigationbar.scss'\r\nimport { HeaderProps } from '../../types/propTypes'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Navigation = ({ articleNavHeaders }: HeaderProps) => {\r\n    return (\r\n        <nav className=\"navigation-bar\" data-testid=\"navigation-bar\">\r\n            {articleNavHeaders && (\r\n                <ul>\r\n                    {articleNavHeaders.map((header, i) => (\r\n                        <li key={i}>\r\n                            <Link to={header.ref} data-testid={header.text}>\r\n                                {header.text}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </nav>\r\n    )\r\n}\r\n","import './maincontent.scss'\r\nimport { ArticleProps } from '../../types/propTypes'\r\n\r\nexport const Article = ({\r\n    header,\r\n    imgsrc,\r\n    text,\r\n    articleLinks,\r\n}: ArticleProps) => {\r\n    return (\r\n        <article className=\"app-main\" data-testid=\"article\">\r\n            <div className=\"article-preview\">\r\n                <h2 className=\"article-header\">{header}</h2>\r\n                <img\r\n                    className=\"article-image\"\r\n                    src={imgsrc}\r\n                    alt=\"Project Preview\"\r\n                />\r\n                <div className=\"article-text\">\r\n                    <p>{text}</p>\r\n                    {articleLinks && (\r\n                        <ul>\r\n                            {articleLinks.map((link, i) => (\r\n                                <li key={i}>{link}</li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n","const pageRefs = {\r\n    vilperiMe: '/',\r\n    cah1: '/cah1',\r\n    cah2: '/cah2',\r\n    cah3: '/cah3',\r\n}\r\n\r\nexport const articleNavHeaders = [\r\n    { text: 'vilperi.me', ref: '.' + pageRefs.vilperiMe },\r\n    { text: 'Cards Against Humanity', ref: '.' + pageRefs.cah1 },\r\n    { text: 'Super Cool Thing', ref: '.' + pageRefs.cah2 },\r\n    { text: 'Do not click', ref: '.' + pageRefs.cah3 },\r\n]\r\n\r\nexport const articles = [\r\n    {\r\n        path: pageRefs.vilperiMe,\r\n        header: 'Vilperi.me',\r\n        imgsrc: 'https://cdn.discordapp.com/attachments/671042990478852096/895195178774716426/unknown.png',\r\n        text: 'Hello and welcome to my site! This site was created with React & Typescript. Threejs brings the site to life, while hosting has been covered through [Your Mom]',\r\n        articleLinks: ['GitHub: https://github.com/petterigit/vilperime'],\r\n    },\r\n    {\r\n        path: pageRefs.cah1,\r\n        header: 'Cards against humanity',\r\n        imgsrc: 'https://media.discordapp.net/attachments/702911139280846868/834828718161133638/unknown.png?width=1003&height=382',\r\n        text: `Lorem ipsum dolor sit amet, consectetur adipisicing\r\n        elit. Donec a diam lectus. Set sit amet ipsum mauris.\r\n        Maecenas congue ligula as quam viverra nec consectetur\r\n        ant hendrerit. Donec et mollis dolor. Praesent et diam\r\n        eget libero egestas mattis sit amet vitae augue. Nam\r\n        tincidunt congue enim, ut porta lorem lacinia\r\n        consectetur.`,\r\n        articleLinks: ['Link to repo', 'Website link'],\r\n    },\r\n    {\r\n        path: pageRefs.cah2,\r\n        header: 'Cards against humanity2',\r\n        imgsrc: 'https://media.discordapp.net/attachments/702911139280846868/834828718161133638/unknown.png?width=1003&height=382',\r\n        text: `Lorem ipsum dolor sit amet, consectetur adipisicing\r\n        elit. Donec a diam lectus. Set sit amet ipsum mauris.\r\n        Maecenas congue ligula as quam viverra nec consectetur\r\n        ant hendrerit. Donec et mollis dolor. Praesent et diam\r\n        eget libero egestas mattis sit amet vitae augue. Nam\r\n        tincidunt congue enim, ut porta lorem lacinia\r\n        consectetur.`,\r\n        articleLinks: ['Link to repo', 'Website link'],\r\n    },\r\n    {\r\n        path: pageRefs.cah3,\r\n        header: 'Cards against humanity2',\r\n        imgsrc: 'https://media.discordapp.net/attachments/702911139280846868/834828718161133638/unknown.png?width=1003&height=382',\r\n        text: `Lorem ipsum dolor sit amet, consectetur adipisicing\r\n        elit. Donec a diam lectus. Set sit amet ipsum mauris.\r\n        Maecenas congue ligula as quam viverra nec consectetur\r\n        ant hendrerit. Donec et mollis dolor. Praesent et diam\r\n        eget libero egestas mattis sit amet vitae augue. Nam\r\n        tincidunt congue enim, ut porta lorem lacinia\r\n        consectetur.`,\r\n        articleLinks: ['Link to repo', 'Website link'],\r\n    },\r\n]\r\n","import './maincontent.scss'\r\nimport { Article } from './Article'\r\n\r\nimport React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport { articles } from '../../utils/articleContent'\r\n\r\nexport const MainContent = () => {\r\n    return (\r\n        <div data-testid=\"mainContent\">\r\n            <Switch>\r\n                {articles.map((article) => (\r\n                    <Route key={article.path} exact path={article.path}>\r\n                        <Article\r\n                            header={article.header}\r\n                            imgsrc={article.imgsrc}\r\n                            text={article.text}\r\n                            articleLinks={article.articleLinks}\r\n                        />\r\n                    </Route>\r\n                ))}\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import './footer.scss'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <header className=\"footer\" data-testid=\"footer\">\r\n            <p> Webpage by Vilps. </p>\r\n        </header>\r\n    )\r\n}\r\n","import './styles/layout-styles.scss'\nimport './styles/background.scss'\nimport './styles/app.scss'\nimport { Header } from './components/Header/Header'\nimport { Navigation } from './components/Navigation/Navigation'\nimport { MainContent } from './components/MainContent/MainContent'\nimport { Footer } from './components/Footer/Footer'\n\nimport React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { articleNavHeaders } from './utils/articleContent'\n\nexport const App = () => {\n    return (\n        <Router>\n            <div className=\"app\" data-testid=\"app\">\n                <Header />\n                <Navigation articleNavHeaders={articleNavHeaders} />\n                <MainContent />\n\n                <Footer />\n            </div>\n        </Router>\n    )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport './styles/Normalize.css'\nimport './styles/global-styles.scss'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}